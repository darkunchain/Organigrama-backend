estructura del proyecto:
src
 ├── datos
 │    ├── usuarios.json
 │    └── funcionarios.json
 ├── routes
 │    ├── auth.routes.js
 │    └── funcionarios.routes.js
 ├── controllers
 │    ├── auth.controller.js
 │    └── funcionarios.controller.js
 ├── services
 │    ├── auth.service.js
 │    └── funcionarios.service.js
 ├── utils
 │    └── fileManager.js
 ├── server.js



1. Registro de usuario

POST http://localhost:3000/auth/register
headers:
Content-Type: application/json

body json data
{
  "usuario": "luisprieto",
  "password": "12345678",
  "email": "lfprieto@registraduria.gov.co"
}

2. Login de usuario:

POST http://localhost:3000/auth/login
headers:
Content-Type: application/json

body json
{
  "usuario": "luisprieto",
  "password": "12345678"
}

3. Crear usuario (Administrador)

POST http://localhost:3000/auth/register
headers:
Content-Type: application/json

body json
{
  "usuario": "adminuser",
  "password": "adminpass123",
  "email": "admin@empresa.com"
}


4. Editar banderas de usuario (permitido, admin)

PUT http://localhost:3000/auth/permission
headers:
Content-Type: application/json

body json
{
  "userId": "fargsqw123412sgrtwfgsdfger",
  "permitido": true,
  "admin": false
}


5. Eliminar usuario

DELETE http://localhost:3000/auth/permission

6. Crear funcionario

POST http://localhost:3000/funcionarios
headers:
Content-Type: application/json

body json
{
  "nombre": "Juan Pérez",
  "cargo": "Analista de TI",
  "vertical": "Tecnología",
  "correo": "jperez@empresa.com"
}


7. Editar funcionario

PUT http://localhost:3000/funcionarios/{id}  // debe cambiar {id} por el id del funcionario a editar
headers:
Content-Type: application/json

body json
{
  "nombre": "Juan Pérez",
  "cargo": "Líder de TI",
  "vertical": "Tecnología",
  "activo": true
}


8. Eliminar funcionario

DELETE http://localhost:3000/funcionarios/{id} // debe cambiar {id} por el id del funcionario a Eliminar
headers:
Content-Type: application/json